5.8 流水CPU

5.8.1 并行处理技术 并行性的两种含义： 同时性 指两个以上事件在同一时刻发生； 并发性 指两个以上事件在同一时间间隔内发生。 1.时间并行 时间并行指时间重叠，在并行性概念中引入时间因素，让多个 处理过程在时间上相互错开，轮流重叠地使用同一套硬件设备的各 个部分，以加快硬件周转而赢得速度。　 时间并行性概念的实现方式就是采用流水处理部件。这是一种 非常经济而实用的并行技术，能保证计算机系统具有较高的性能价 格比。

2.空间并行 空间并行指资源重复，在并行性概念中引入空间因素，以 “数量取胜” 为原则来大幅度提高计算机的处理速度。 大规模和超大规模集成电路的迅速发展为空间并行 技术带来 了巨大生机，因而成为目前实现并行处理的一个主要途径。 空间并行技术主要体现 在多处理器系统和多计算机系统。3. 时间并行+空间并行 指时间重叠和资源重复的综合应用 ，既采用时间并行性又采 用空间并行性。显然，第三种并行技术带来的高速效益是最好的。

2. 流水CPU的时空图　
为了实现流水，输入的任务(或过程)分割为一系列子任务， 并使各子任务能在流水线的各个阶段并发地执行。 当任务连续不断地输入流水线时，在流水线的输出端便连续 不断地吐出执行结果，从而实现了子任务级的并行性。
流水CPU中一个指令周期的任务分解

非流水计算机的时空图

T ? 2 ? 4 ? ?t ? 8?t

设流水线各段时间为 Δt 完成 n 条指令在等效的非流水线上 T = nm・ Δt

图(c)表示流水计算机的时空图。

T ? 4 ? ? t ? (5 ? 1) ? ? t ? 9 ? t

设流水线各段时间为 Δt 完成 n 条指令在 m 段流水线上共需 T = m ・Δt + (n-1) ・ Δt

T ? 4 ? 5 ? ? t ? 20 ? t

设流水线各段时间为 Δt 完成 n 条指令在 m 段流水线上共需 T = m ・ Δt + (n-1) ・ Δt 完成 n 条指令在等效的非流水线上共需 T ′= nm・ Δt 吞吐率: 单位时间执行的指令数量（单位： 指令数量/秒）。

t 1
指令 1 指令 2 指令 3 指令 4 指令 5 指令 6 指令 7 指令 8 指令 9 FI

2
DI FI

3
CO DI FI

4
FO CO DI FI

5

6

7

8

9

10

11

12

13

14

EI WO FO EI WO CO FO EI WO DI CO FO EI WO FI DI CO FO EI WO FI DI CO FO EI WO FI DI CO FO EI WO FI DI CO FO EI WO FI DI CO FO EI WO

完成 一条指令 串行执行 六级流水

6 个时间单位 6 × 9 ＝ 54 个时间单位 14 个时间单位

超标量流水计算机的时空图

五、流水线的多发技术 1. 超标量技术 ? 每个时钟周期内可 并发多条独立指令 配置多个功能部件 ? 不能调整 指令的 执行顺序 通过编译优化技术，把可并行执行的指令搭配起来
指令序列

IF ID EX WR

0

1

2

3

4

5

6

7

8

9

10 11 12

13

时钟 周期

2. 超流水线技术 ? 在 一个时钟周期内再分段 （ 3 段） 在一个时钟周期内一个功能部件使用多次（ 3 次） ? 不能调整指令的执行顺序 靠编译程序解决优化问题

指令序列

IF ID EX WR 流水线速度是原来速度的 3 倍

时钟周期 0 1 2 3 4 5 6 7 8 9 10 11 12 13

3. 超长指令字技术 ? 由编译程序 挖掘 出指令间 潜在 的 并行性， 将 多条 能 并行操作 的指令组合成 一条 具有 多个操作码字段 的 超长指令字（可达几百位） ? 采用 多个处理部件
指令序列

IF ID EX WR

0

1

2

3

4

5

6

7

8

9

10

11

12

时钟周期 13

5.8.3 流水线中的主要问题
流水过程中通常会出现以下三种相关冲突，使流水线断流。 1. 资源相关　 多条指令进入流水线后在同一机器时钟周期内争用同一个功能部件所发生冲 突。假定一条指令流水线由五段组成，在时钟4时，I1与I4两条指令发生争用存储 器资源的相关冲突。

解决资源相关冲突的办法： 1.第I4条指令停顿一拍后再启动； 2.增设一个存储器，将指令和数据分别放在两个存储器中。

2. 数据相关　
在一个程序中，如果必须等前一条指令执行完毕后，才能执行后一条指令， 那么这两条指令就是数据相关的。 流水线中指令的处理是重叠进行的，前一条指令还没有结束，第二、三条指 令就陆续地开始工作。由于多条指令的重叠处理，当后继指令所需的操作数，刚 好是前一指令的运算结果时，便发生数据相关冲突。 如下表所示，ADD指令与SUB指令发生了数据相关冲突。

解决数据相关冲突的办法： 在流水CPU的运算器中设置若干运算结果缓冲寄存器，暂时保留运算结果，以便 于后继指令直接使用，这称为“向前”或定向传送技术。　

3. 控制相关 由转移指令引起。当执行转移指令时，依据转移条件的产生结果，可能 为顺序取下条指令；也可能转移到新的目标地址取指令，从而使流水线 发生 断流。　 为了减小转移指令对流水线性能的影响，常用以下两种转移处理技术：　 延迟转移法 由编译程序重排指令序列来实现。基本思想是“先执行再转移” ，即发生转移取时并不排空指令流水线，而是让紧跟在转移指令Ib之后已进 入流水线 的少数几条指令继续完成。如果这些指令是与Ib结果无关的有用指 令，那么延迟损失时间片正好得到了有效的利用。　 转移预测法 用硬件方法来实现，依据指令过去的行为来预测将来的行为。通 过使用转移取和顺序取两路指令预取队列器以及目标指令cache，可将转移 预测提前到取指阶段进行，以获得良好的效果。

地址

内存单元

020 021 代码段 022 023 024
…

250 000 030 030 020 040 000 000 140 021

CLA ADD 30 STA 40 NOP JMP 21

……
000 006 000 040

030 031 数据段
…

……
存和数单元

040
…

……

【例4】流水线中有三类数据相关冲突：写后读相关；读后写相关；写后写相 关。判断以下三组指令各存在哪种类型的数据相关。 (1) I1: ADD R1，R2，R3 ； (R2) + (R3)->R1　 I2: SUB R4，R1，R5 ； (R1) - (R5)->R4 (2) I3: STA M(x)，R3 ； (R3)->M(x)，M(x)是存储器单元　 I4: ADD R3，R4，R5 ； (R4)+(R5)->R3 (3) I5: MUL R3，R1，R2 ； (R1)×(R2)->R3　 I6: ADD R3，R4，R5 ； (R4) + (R5)->R3 【解】 第(1)组指令中，I1指令运算结果应先写入R1，然后在I2指令中读出R1内容。 由于I2指令进入流水线，变成I2指令在I1指令写入R1前就读出R1内容，发生 RAW相关。 第(2)组指令中，I3指令应先读出R3内容并存入存储单元M(x)，然后在I4指令 中将运算结果写入R3。但由于I4指令进入流水线，变成I4指令在I3指令读出 R3内容前就写入R3，发生WAR相关。　 第(3)组指令中，如果I6指令的加法运算完成时间早于I5指令的乘法运算时间 ，变成指令I6在指令I5写入R3前就写入R3，导致R3的内容错误，发生WAW 相关 。

例： 下列不会引起指令流水阻塞的是（） A.数据旁路 C.条件转移 B.数据相关 D.资源冲突

例： 某计算机的指令流水线由四个功能段组成，指令 流经各功能段的时间（忽略各功能段之间的 缓存时间） 分别是90ns、80ns、70ns和60ns，则该计算机的CPU时 钟周期至少是（） A．90ns C. 70ns B.80ns D.60ns

例：下列给出的指令系统特点中，有利于实现指令流水线的是 （） I. 指令格式规整且长度一致 II.指令和数据按边界对齐存放 III.只有Load/Store指令才能对操作数进行存储 访问 A. 仅I、II C. 仅I、III B. 仅II、III D. I、II、III

例：设CPU主频为1.03GHz，采用4级指令流水线，每个流水 段执行需要一个时钟周期。假定CPU执行了100条指令，其 在执行过程中没有发生任何流水线阻塞，此时流水线的吞 吐率为（ ） A.0.25×109条指令/秒 C. 1.0×109条指令/秒 B. 0.97×109条指令/秒 D. 1.03×109条指令/秒

例： 某16位计算机中，带符号整数用补码表示，数 据Cache和指令Cache分离。表中给出了指令系统中 部分指令格式，其中RS，RD表示寄存器，MEM表 示存储器，（X）表示寄存器X或存储单元X的内容。
名称 加法指令 算术/逻辑左移 算术右移 取数指令 存数指令 指令的汇编格式 ADD Rs，Rd SHL Rd SHR Rd LOAD Rd MEM STORE Rs MEM 指令含义 （Rs）+（Rd）→Rd 2×（Rd）→Rd （Rd）/2→Rd （MEM）→Rd （Rs）→（MEM）

该计算机采用5段流水方式执行指令，各流水段分别是取指 （IF），译码/读寄存器（ID），执行/计算有效地址（EX），访 问存储器（M）和结果写回寄存器（WB），流水线采用“按序发 射，按序完成”方式，没有采用转发技术处理数据相关，并且同 一个寄存器的读和写操作不能在同一个时钟周期内完成。请回答 下列问题。 （1）若int型变量X的值为－513，存放在寄存器R1中，则执行 “SHR R1”后，R1中的内容是多少？（用十六进制表示） （2）在某个时间段中，有连续4条指令进入流水线，在其执行过 程中没有发生指令阻塞，则执行这4条指令所需的时钟周期数为多 少？

（3）高级语言程序中某赋值语句为X=A+B，X、A和B均为int型变 量，它们的存储单元地址分别表示为[X]、[A]和[B]。该语句对应的 指令序列及其在流水线中的执行过程如图所示。 I1: LOAD R1，[A] I2 : LOAD R2，[B] I3 : ADD R1，R2 I4 : STORE R2，[X ] 1 2 3 4 5 6 7 8 9 10 11 12 13 14
I1 I2 I3 I4 IF ID EX M WB IF ID EX M WB IF ID EX M WB IF ID EX M WB

则这4条指令执行过程中，I3的ID段被阻塞， I4的IF段被阻塞原因各是什么?

（4）若高级语言程序中，某赋值语句为X=X*2+A，X和 A均为UNSIGNED INT类型变量，它们的存储单元地址 分别表示为[X]、[A]，则执行这条语句至少需要多少时 钟周期？要求模仿题44图画出这条语句对应的指令序列 及其在流水线中的执行过程示意图。 I1 LOAD R1,[X] I2 LOAD R2,[A] I3 SHL R1 I4 ADD R1,R2 I5 STORE R2,[X]

（1）若int型变量X的值为－513，存放在寄存器R1中，则执行 “SHR R1”后，R1中的内容是多少？（用十六进制表示） －513=(－1000000001) [－513]补=101,1111,1111=1111,1101,1111,1111 SHR后1111,1110,1111,1111=FEFFH （2）在某个时间段中，有连续4条指令进入流水线，在其执行过 程中没有发生指令阻塞，则执行这4条指令所需的时钟周期数为多 少？ 5+(4-1)=8

（3）高级语言程序中某赋值语句为X=A+B，X、A和B均为int型变 量，它们的存储单元地址分别表示为[X]、[A]和[B]。该语句对应的 指令序列及其在流水线中的执行过程如图所示。 I1 LOAD R1，[A] I2 LOAD R2，[B] I3 ADD R1，R2 I4 STORE R2，[X ] 1 2 3 4 5 6 7 8 9 10 11 12 13 14
I1 I2 I3 I4 IF ID EX M WB IF ID EX M WB IF ID EX M WB IF ID EX M WB

则这4条指令执行过程中，I3的ID段被阻塞，I4的IF段被阻塞 原因各是什么?

(3)I3与I1I2存在数据相关，I1I2的结果写到寄存器 R1R2后，I3才能读寄存器R1R2，所以I3的ID段被阻 塞。 I3的ID段被阻塞，I4不能完成取指，所以I4被阻塞。

（4）若高级语言程序中，某赋值语句为X=X*2+A，X和 A均为UNSIGNED INT类型变量，它们的存储单元地址 分别表示为[X]、[A]，则执行这条语句至少需要多少时 钟周期？要求模仿题44图画出这条语句对应的指令序列 及其在流水线中的执行过程示意图。 I1 LOAD R1,[X] I2 LOAD R2,[A] I3 SHL R1 I4 ADD R1,R2 I5 STORE R2,[X]

1

2

3

4

5

6

7

8

9

10 11 12 13 14 15 16 17

I1 IF ID EX M WB I2 I3 I4 I5
IF ID EX M WB IF ID EX M IF WB ID EX M WB IF ID EX M WB

5.9 RISC CPU

5.9.1 RISC CPU RISC的三个要素是： (1)一个有限的简单的指令集；(2)CPU配备大量的通用寄存器；(3)强调对指令 流水线的优化。 基于三要素的RISC机器的特征是： (1)使用等长指令，目前的典型长度是4个字节。　 (2)寻址方式少且简单，一般为2―3种，最多不超过4种，绝不出现存储器间接 寻址方式。　 (3)只有取数指令、存数指令访问存储器。指令中最多出现RS型指令，绝不出 现SS型指令。　 (4)指令集中的指令数目一般少于100种，指令格式一般少于4种。　 (5)指令功能简单，控制器多采用硬布线方式，以期更快的执行速度。　 (6)平均而言，所有指令的执行时间为一个处理时钟周期。　 (7)指令格式中用于指派整数寄存器的个数不少于32个，用于指派浮点数寄存 器的个数不少于16个。 (8)强调通用寄存器资源的优化使用。　 (9)支持指令流水并强调指令流水的优化使用。　 (10)RlSC技术的复杂性于它的编译程序，因此软件系统开发时间比CISC机器 长。

RISC与CISC的主要特征对比 比较内容 指令系统 指令数目 指令格式 寻址方式 指令字长 可访存指令 各种指令使用频率 各种指令执行时间 优化编译实现 程序源代码长度 控制器实现方式 软件系统开发时间

CISC 复杂，庞大 一般大于200 一般大于4 一般大于4 不固定 不加限制 相差很大 相差很大 很难 较短 绝大多数为微程序控制 较短

RISC 简单，精简 一般小于100 一般小于4 一般小于4 等长 只有LOAD/STORE指令 相差不大 绝大多数在一个周期内完成 较容易 较长 绝大多数为硬布线控制 较长

 